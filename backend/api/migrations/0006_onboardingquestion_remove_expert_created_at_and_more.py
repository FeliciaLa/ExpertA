# Generated by Django 5.1.3 on 2025-03-26 21:14

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("api", "0005_trainingsession_traininganswer"),
    ]

    operations = [
        migrations.CreateModel(
            name="OnboardingQuestion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("question_text", models.TextField()),
                ("order", models.IntegerField(unique=True)),
                ("category", models.CharField(max_length=50)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("is_active", models.BooleanField(default=True)),
            ],
            options={
                "db_table": "onboarding_questions",
                "ordering": ["order"],
            },
        ),
        migrations.RemoveField(
            model_name="expert",
            name="created_at",
        ),
        migrations.RemoveField(
            model_name="expert",
            name="updated_at",
        ),
        migrations.AddField(
            model_name="expert",
            name="last_training_at",
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="expert",
            name="onboarding_completed",
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name="expert",
            name="onboarding_completed_at",
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="expert",
            name="total_training_messages",
            field=models.IntegerField(default=0),
        ),
        migrations.AlterField(
            model_name="expert",
            name="specialties",
            field=models.TextField(blank=True),
        ),
        migrations.CreateModel(
            name="ExpertProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("industry", models.CharField(max_length=255)),
                ("years_of_experience", models.IntegerField()),
                ("key_skills", models.TextField()),
                ("typical_problems", models.TextField()),
                ("background", models.TextField()),
                ("certifications", models.TextField(blank=True)),
                ("methodologies", models.TextField(blank=True)),
                ("tools_technologies", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "expert",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "expert_profiles",
            },
        ),
        migrations.CreateModel(
            name="TrainingMessage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[("ai", "AI"), ("expert", "Expert")], max_length=10
                    ),
                ),
                ("content", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("context_depth", models.IntegerField(default=1)),
                ("knowledge_area", models.CharField(blank=True, max_length=255)),
                (
                    "expert",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="training_messages",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "training_messages",
                "ordering": ["created_at"],
            },
        ),
        migrations.CreateModel(
            name="OnboardingAnswer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("answer", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "expert",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="onboarding_answers",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "question",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.onboardingquestion",
                    ),
                ),
            ],
            options={
                "db_table": "onboarding_answers",
                "ordering": ["question__order"],
                "unique_together": {("expert", "question")},
            },
        ),
    ]
